package com.barberapp.controllers;

import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.barberapp.entities.Booking;
import com.barberapp.entities.Username;
import com.barberapp.services.booking.ServiceBooking;


@RestController
@RequestMapping("booking")
public class ControllerBooking {
	
	@Autowired(required = true) 
	private ServiceBooking serviceBooking;
	
	
	@GetMapping("hola")
	public String saludo() {
		
		return "saludo desde controlador Booking";
	}
	

	 /////////////////// USER REGISTRAR   http://localhost:8080/booking/save ////////////////
	@PostMapping("/save")
	public ResponseEntity<Booking> createUsername (@RequestBody Booking booking){
		
		return ResponseEntity.status(HttpStatus.CREATED).body(serviceBooking.save(booking));
	}
	

	/////////////////// CONSULT BOOKING http://localhost:8080/booking/consult ////////////////
	@GetMapping("/consult/{id}")
	public ResponseEntity<Optional<Booking>> consultUsernameId (@PathVariable(value = "id_booking") Long id_booking){
		
		Optional<Booking> bork = serviceBooking.findById(id_booking);
		
		if (bork.isPresent()) {
			return ResponseEntity.ok(bork);
		} else {
			return ResponseEntity.notFound().build();
		}
	}
	
	/////////////////// DELETE USER   http://localhost:8080/booking/delete ////////////////
	@DeleteMapping("/delete/{id}")
	public ResponseEntity<Booking> deleteUser(@PathVariable(value = "id_booking")  Long id_booking){
		
		
		if(serviceBooking.findById(id_booking).isPresent()) {
			
			serviceBooking.deleteById(id_booking);
			return ResponseEntity.ok().build();
			
		} else {
			
			return ResponseEntity.notFound().build();
		}		
	}
	
	

}
